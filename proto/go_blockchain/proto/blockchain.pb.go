// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: blockchain.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Transaction data
type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        []byte                 `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver      []byte                 `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature     []byte                 `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_blockchain_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Transaction) GetReceiver() []byte {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *Transaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transaction) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// Block data
type Block struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	PrevHash      []byte                 `protobuf:"bytes,2,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	MerkleRoot    []byte                 `protobuf:"bytes,3,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Transactions  []*Transaction         `protobuf:"bytes,5,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_blockchain_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{1}
}

func (x *Block) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Block) GetPrevHash() []byte {
	if x != nil {
		return x.PrevHash
	}
	return nil
}

func (x *Block) GetMerkleRoot() []byte {
	if x != nil {
		return x.MerkleRoot
	}
	return nil
}

func (x *Block) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Block) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

// Proposal from leader
type BlockProposal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         *Block                 `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockProposal) Reset() {
	*x = BlockProposal{}
	mi := &file_blockchain_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockProposal) ProtoMessage() {}

func (x *BlockProposal) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockProposal.ProtoReflect.Descriptor instead.
func (*BlockProposal) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{2}
}

func (x *BlockProposal) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

// Vote from follower
type Vote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accepted      bool                   `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	BlockHash     []byte                 `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vote) Reset() {
	*x = Vote{}
	mi := &file_blockchain_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vote) ProtoMessage() {}

func (x *Vote) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vote.ProtoReflect.Descriptor instead.
func (*Vote) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{3}
}

func (x *Vote) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *Vote) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

// Empty struct
type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_blockchain_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{4}
}

// Response with message
type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_blockchain_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{5}
}

func (x *Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Block request by height
type BlockHeight struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Height        int64                  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockHeight) Reset() {
	*x = BlockHeight{}
	mi := &file_blockchain_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockHeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeight) ProtoMessage() {}

func (x *BlockHeight) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeight.ProtoReflect.Descriptor instead.
func (*BlockHeight) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{6}
}

func (x *BlockHeight) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

var File_blockchain_proto protoreflect.FileDescriptor

const file_blockchain_proto_rawDesc = "" +
	"\n" +
	"\x10blockchain.proto\x12\n" +
	"blockchain\"\x95\x01\n" +
	"\vTransaction\x12\x16\n" +
	"\x06sender\x18\x01 \x01(\fR\x06sender\x12\x1a\n" +
	"\breceiver\x18\x02 \x01(\fR\breceiver\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x1c\n" +
	"\tsignature\x18\x05 \x01(\fR\tsignature\"\xb4\x01\n" +
	"\x05Block\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\x12\x1b\n" +
	"\tprev_hash\x18\x02 \x01(\fR\bprevHash\x12\x1f\n" +
	"\vmerkle_root\x18\x03 \x01(\fR\n" +
	"merkleRoot\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12;\n" +
	"\ftransactions\x18\x05 \x03(\v2\x17.blockchain.TransactionR\ftransactions\"8\n" +
	"\rBlockProposal\x12'\n" +
	"\x05block\x18\x01 \x01(\v2\x11.blockchain.BlockR\x05block\"A\n" +
	"\x04Vote\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\bR\baccepted\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x02 \x01(\fR\tblockHash\"\a\n" +
	"\x05Empty\">\n" +
	"\bResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"%\n" +
	"\vBlockHeight\x12\x16\n" +
	"\x06height\x18\x01 \x01(\x03R\x06height2\x80\x03\n" +
	"\x11BlockchainService\x12@\n" +
	"\x0fSendTransaction\x12\x17.blockchain.Transaction\x1a\x14.blockchain.Response\x12;\n" +
	"\fProposeBlock\x12\x19.blockchain.BlockProposal\x1a\x10.blockchain.Vote\x124\n" +
	"\n" +
	"SubmitVote\x12\x10.blockchain.Vote\x1a\x14.blockchain.Response\x12>\n" +
	"\x0eGetBlockByHash\x12\x19.blockchain.BlockProposal\x1a\x11.blockchain.Block\x126\n" +
	"\x0eGetLatestBlock\x12\x11.blockchain.Empty\x1a\x11.blockchain.Block\x12>\n" +
	"\x10GetBlockByHeight\x12\x17.blockchain.BlockHeight\x1a\x11.blockchain.BlockB\x15Z\x13go_blockchain/protob\x06proto3"

var (
	file_blockchain_proto_rawDescOnce sync.Once
	file_blockchain_proto_rawDescData []byte
)

func file_blockchain_proto_rawDescGZIP() []byte {
	file_blockchain_proto_rawDescOnce.Do(func() {
		file_blockchain_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_blockchain_proto_rawDesc), len(file_blockchain_proto_rawDesc)))
	})
	return file_blockchain_proto_rawDescData
}

var file_blockchain_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_blockchain_proto_goTypes = []any{
	(*Transaction)(nil),   // 0: blockchain.Transaction
	(*Block)(nil),         // 1: blockchain.Block
	(*BlockProposal)(nil), // 2: blockchain.BlockProposal
	(*Vote)(nil),          // 3: blockchain.Vote
	(*Empty)(nil),         // 4: blockchain.Empty
	(*Response)(nil),      // 5: blockchain.Response
	(*BlockHeight)(nil),   // 6: blockchain.BlockHeight
}
var file_blockchain_proto_depIdxs = []int32{
	0, // 0: blockchain.Block.transactions:type_name -> blockchain.Transaction
	1, // 1: blockchain.BlockProposal.block:type_name -> blockchain.Block
	0, // 2: blockchain.BlockchainService.SendTransaction:input_type -> blockchain.Transaction
	2, // 3: blockchain.BlockchainService.ProposeBlock:input_type -> blockchain.BlockProposal
	3, // 4: blockchain.BlockchainService.SubmitVote:input_type -> blockchain.Vote
	2, // 5: blockchain.BlockchainService.GetBlockByHash:input_type -> blockchain.BlockProposal
	4, // 6: blockchain.BlockchainService.GetLatestBlock:input_type -> blockchain.Empty
	6, // 7: blockchain.BlockchainService.GetBlockByHeight:input_type -> blockchain.BlockHeight
	5, // 8: blockchain.BlockchainService.SendTransaction:output_type -> blockchain.Response
	3, // 9: blockchain.BlockchainService.ProposeBlock:output_type -> blockchain.Vote
	5, // 10: blockchain.BlockchainService.SubmitVote:output_type -> blockchain.Response
	1, // 11: blockchain.BlockchainService.GetBlockByHash:output_type -> blockchain.Block
	1, // 12: blockchain.BlockchainService.GetLatestBlock:output_type -> blockchain.Block
	1, // 13: blockchain.BlockchainService.GetBlockByHeight:output_type -> blockchain.Block
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_blockchain_proto_init() }
func file_blockchain_proto_init() {
	if File_blockchain_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_blockchain_proto_rawDesc), len(file_blockchain_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blockchain_proto_goTypes,
		DependencyIndexes: file_blockchain_proto_depIdxs,
		MessageInfos:      file_blockchain_proto_msgTypes,
	}.Build()
	File_blockchain_proto = out.File
	file_blockchain_proto_goTypes = nil
	file_blockchain_proto_depIdxs = nil
}
